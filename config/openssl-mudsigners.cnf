[ cname_section ]
cname_seq_type=SEQ:cname_seq

[ cname_seq ]
cname_oid=OID:2.5.4.6
cname_val=PRINTABLESTRING:"CH"

[ email_section ]
email_seq_type=SEQ:email_seq

[ email_seq ]
emailOID=OID:1.2.840.113549.1.9.1
email_val=IA5:"ascertia@ofcourseimright.com"

[ cn_section ]
cn_seq_type=SEQ:cn_seq

[ cn_seq ]
cn_oid=OID:2.5.4.3
cn_val=PRINTABLESTRING:"Eliot Lear"

[ usr_cert ]

# These extensions are added when 'ca' signs a request.

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints=CA:FALSE

# Here are some examples of the usage of nsCertType. If it is omitted
# the certificate can be used for anything *except* object signing.

# This is OK for an SSL server.
# nsCertType            = server

# For an object signing certificate this would be used.
# nsCertType = objsign

# For normal client use this is typical
# nsCertType = client, email

# and for everything including object signing:
# nsCertType = client, email, objsign

# This is typical in keyUsage for a client certificate.
# keyUsage = nonRepudiation, digitalSignature, keyEncipherment
# This will be displayed in Netscape's comment listbox.
# nsComment         = "OpenSSL Generated Certificate"

[ mud_sign ]
# I had to add this section after the dependent sections
countryName=SET:cname_section
emailAddress=SET:email_section
CN=SET:cn_section

[ mud_signers ]
# This section is for inclusion of the MUD-signer extension in a
# device certificate.  It represents an X.509 Name, as defined in
# RFC 5280 that is referenced in the Subject Name of the signing
# certificate of the MUD file signature (described in sections
# 11 and 13 of RFC 8520).
#
# N.B. this form may vary somewhat based on the CHOICE of Name
# used in a certificate.  The way this is handled is as follows:
#
# Use the dumpasn1 to determine the appropriate structure.  For
# example, the following output represents the name 
# "C = CH, emailAddress = ascertia@ofcourseimright.com, CN = Eliot Lear"
#
# [...]
# 147   79:     SEQUENCE {
# 149   11:       SET {
# 151    9:         SEQUENCE {
# 153    3:           OBJECT IDENTIFIER countryName (2 5 4 6)
# 158    2:           PrintableString 'CH'
#         :           }
#         :         }
# 162   43:       SET {
# 164   41:         SEQUENCE {
# 166    9:           OBJECT IDENTIFIER emailAddress (1 2 840 113549 1 9 1)
# 177   28:           IA5String 'ascertia@ofcourseimright.com'
#         :           }
#         :         }
# 207   19:       SET {
# 209   17:         SEQUENCE {
# 211    3:           OBJECT IDENTIFIER commonName (2 5 4 3)
# 216   10:           PrintableString 'Eliot Lear'
#         :           }
#         :         }
#         :       }
#[...]
#
# The representation is generated as follows.
# A SEQUENCE is represented in this configuration in the usr_cert section
# below as "1.3.6.1.5.5.7.1.30=ASN1:SEQ:mud_signers" where "mud_signers"
# refers to the section "mud_signers"
#
# A SET is generated by referring within that section to a "SET",
# for example: countryName=SET:cname_section
#
# This in turn requires another SEQUENCE, which is specified in our
# example in the "cname_section" as cname_seq_type=SEQ:cname_seq
#
# Finally in the cname_seq section we can name the actual OID and country name.
#  cname_oid=OID:2.5.4.6
#  cname_val=PRINTABLESTRING:"CH"
1.3.6.1.5.5.7.1.25=ASN1:IA5STRING:https://www.ofcourseimright.com/Luminaire_150.json"
1.3.6.1.5.5.7.1.30=ASN1:SEQ:mud_sign
